{"version":3,"file":"static/js/713.d0afce76.chunk.js","mappings":"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","sources":["components/FullScreenSection.js","components/Loading.js","components/Introduction.js","components/Card.js","components/MenuSection.js","components/Homepage.js","components/Order.js","components/OrderPage.js","components/OrderOnline.js","hooks/useSubmit.js","components/Reservation.js","components/ReservationPage.js","components/CartItems.js","components/DeliveryAddress.js","components/Payment.js","components/Cart.js","components/CartPage.js","components/LoginPage.js","components/Login.js","routes/AppRoutes.js","utils/data.js"],"sourcesContent":["import { VStack } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nconst FullScreenSection = ({ children, isDarkBackground, ...boxProps }) => {\r\n    return (\r\n       <VStack\r\n        backgroundColor={boxProps.backgroundColor}\r\n        color={isDarkBackground ? \"white\" : \"black\"}\r\n        padding=\"10px\"\r\n       >\r\n           <VStack maxWidth=\"1280px\" minHeight=\"80vh\" {...boxProps}>\r\n               {children}\r\n           </VStack>\r\n       </VStack>\r\n    );\r\n   };\r\nexport default FullScreenSection;","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Spinner,\r\n  Progress,\r\n  Image,\r\n  Text,CircularProgress, CircularProgressLabel\r\n} from \"@chakra-ui/react\";\r\nimport logo from \"../images/little_lemon.png\"\r\nconst Loading = () => {\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setProgress((prev) => {\r\n        if (prev >= 100) {\r\n          clearInterval(interval);\r\n          return 100;\r\n        }\r\n        return Math.min(prev + 10, 100); // Increase progress by 10 each interval\r\n      });\r\n    }, 30); // Update progress every 500ms\r\n\r\n    return () => clearInterval(interval); // Cleanup on component unmount\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      height=\"100vh\"\r\n      bgColor=\"#49SE57\"\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n      color=\"#EDEFEE\"\r\n    >\r\n      <Image\r\n        src={logo}\r\n        alt=\"Loading Icon\"\r\n        boxSize=\"100px\"\r\n        mb={4}\r\n      />\r\n      <CircularProgress isIndeterminate color='green.300' />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loading;","import { HStack, Heading, VStack, Button, Text, Image, useBreakpointValue } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport FullScreenSection from \"./FullScreenSection\";\r\nimport img1 from \"../images/small/Intro_Restaurantfood.jpg\";\r\nimport { ChevronRightIcon } from '@chakra-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport Wave from 'react-wavify';\r\nconst para1 = \"We are a family owned Mediterranean restaurant, focused on traditional recipes served with a modern twist.\";\r\n\r\nconst Introduction = () => {\r\n    const alignment = useBreakpointValue({\r\n        base: \"center\", // Default alignment for mobile\r\n        md: \"center\",   // Alignment for medium screens and up\r\n        lg: \"start\",   // Alignment for large screens and up\r\n    });\r\n    return (\r\n        <>\r\n        <FullScreenSection\r\n            justifyContent=\"center\"\r\n            alignItems=\"start\"\r\n            isDarkBackground\r\n            backgroundColor=\"#495E57\"\r\n            borderRadius=\"md\"\r\n            minHeight={{ base: \"50vh\", md: \"570px\" }}\r\n        >\r\n            <HStack\r\n                spacing={{ base: 4, md: 8 }} // Adjust spacing based on screen size\r\n                flexDirection={{ base: \"column\", md: \"row\" }} // Stack vertically on mobile, horizontally on larger screens\r\n            >\r\n                <br/><br/>\r\n                <VStack\r\n                    alignItems={alignment}\r\n                    width={{ base: \"100%\", md: \"60vw\", lg: \"65vw\" }} // Responsive width\r\n                    py={{ base: 5, md: 10 }}\r\n                    spacing={{ base: 3, md: 6 }}\r\n                >\r\n                    <Heading size={{ base: \"lg\", md: \"3xl\" }} fontWeight=\"bold\" noOfLines={1} color=\"#F4CE14\" alignSelf={alignment}>\r\n                        Little Lemon\r\n                    </Heading>\r\n                    <Heading size={{ base: \"md\", md: \"2xl\" }} fontWeight=\"semibold\" noOfLines={1} color=\"#EDEFEE\" alignSelf={alignment}>\r\n                        Hong Kong\r\n                    </Heading>\r\n                    <Text fontSize={{ base: \"md\", md: \"xl\" }} color=\"#EDEFEE\" noOfLines={3} align={alignment}>\r\n                        {para1}\r\n                    </Text>\r\n                    <Link to=\"/reservation\">\r\n                        <Button colorScheme=\"yellow\" width=\"xs\" alignSelf={alignment}>\r\n                            <span style={{ color: '#333333' }}>\r\n                                Reserve a table&nbsp; <ChevronRightIcon />\r\n                            </span>\r\n                        </Button>\r\n                    </Link>\r\n                </VStack>\r\n                <VStack>\r\n                    <Image\r\n                        src={img1}\r\n                        width={{ base: \"90vw\", md: \"40vw\" }} // Full width on mobile, 40% on larger screens\r\n                        height={{ base: \"30vh\", md: \"50vh\" }} // Adjust height based on screen size\r\n                        borderRadius=\"xl\"\r\n                        fit=\"cover\"\r\n                        zIndex=\"100\"\r\n                        marginTop={{ base: \"-20px\", md: \"0\" }}\r\n                        transition=\"all 0.4s linear\"\r\n                        _hover={{\r\n                            transform: \"scale(1.04)\",\r\n                            bg: \"teal.600\",\r\n                        }}\r\n                        _active={{\r\n                            transform: \"scale(1)\",\r\n                        }}\r\n                        maxHeight=\"400px\"\r\n                        maxWidth=\"270px\"\r\n                    />\r\n                </VStack>\r\n            </HStack>\r\n        </FullScreenSection>\r\n        <Wave fill='#495e57'\r\n            paused={false}\r\n            style={{ display: 'flex', transform: 'scaleY(-1)', marginTop: '-100px' }}\r\n            options={{\r\n            height: 20,\r\n            amplitude: 20,\r\n            speed: 0.15,\r\n            points: 3\r\n            }}\r\n        />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Introduction;\r\n\r\n","import { HStack, Heading, VStack, Text, Image, Button, Flex } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState,  } from \"react\";\r\nimport { useNavigate,  } from \"react-router-dom\";\r\nimport { DeleteIcon, AddIcon, MinusIcon, ArrowBackIcon} from '@chakra-ui/icons';\r\nimport { useScreenSize } from \"../context/ScreenSizeContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nconst Card = ({ id, title, category, type, monthly, ingredients, description, price, imageSrc }) => {\r\n    const dataToPass = {\r\n        id: id,\r\n        title: title,\r\n        category: category,\r\n        type: type,\r\n        monthly: monthly,\r\n        ingredients: ingredients,\r\n        description: description,\r\n        price: price,\r\n        imageSrc: imageSrc,\r\n    };\r\n    const { modifyItems, items } = useScreenSize();\r\n    const findCountById = (items, id) => {\r\n        const item = items.find((item) => item.id === id);\r\n        return item ? item.count : undefined;\r\n    };\r\n    const foundCount = findCountById(items, id);\r\n\r\n    const navigate = useNavigate();\r\n    const handleNavigate = () => {\r\n        navigate(`/order-online/order/${title.replace(/ /g, \"\")}`, { state: dataToPass });\r\n    };\r\n    const [count, setCount] = useState(foundCount !== undefined ? foundCount : 0);\r\n\r\n    const handleIncrement = () => {\r\n        setCount(count + 1);\r\n      };\r\n    const handleDecrement = () => {\r\n        if (count > 0) {\r\n          setCount(count - 1);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        modifyItems(id, count, ingredients);\r\n    }, [id,count]);\r\n    return(\r\n        <HStack\r\n            color=\"#333333\"\r\n            backgroundColor=\"#FFFFFF\"\r\n            borderWidth=\"1px\"\r\n            borderRadius=\"md\"\r\n            padding=\"8px\"\r\n        >\r\n            <VStack alignItems=\"start\" width={{ base: \"50vw\", md: \"50vw\" }}>\r\n                <Heading size={{ base: \"md\", md: \"lg\" }} fontWeight=\"semibold\" color=\"#333333\" onClick={handleNavigate} cursor=\"pointer\">{title}</Heading>\r\n                <Text color=\"#333333\" fontSize={{ base: \"md\", md: \"lg\" }} lineHeight={{ base: \"shorter\", md: \"short\" }}noOfLines={3}>\r\n                    {description}\r\n                </Text>\r\n                <Flex justify=\"space-between\" align=\"center\" width=\"100%\">\r\n                    <Text size={{ base: \"md\", md: \"lg\" }} fontWeight=\"medium\" color=\"#333333\">{price}</Text>\r\n                    {count > 0 && true ? (\r\n                        <HStack alignSelf=\"center\" gap={{ base: '5px', md: '8px' }}>\r\n                            <Button onClick={handleDecrement} width={{ base: '4px' }}>\r\n                                <FontAwesomeIcon icon={faMinus} color=\"#333333\"/>\r\n                            </Button>\r\n                            <Text color=\"#333333\" fontSize={{ base: 'md', md: 'lg' }}>{count}</Text>\r\n                            <Button onClick={handleIncrement} width={{ base: '4px' }}>\r\n                                <FontAwesomeIcon icon={faPlus} color=\"#333333\"/>\r\n                            </Button>\r\n                        </HStack>\r\n                    ) : (\r\n                        <Button colorScheme=\"yellow\" width=\"50%\" onClick={handleIncrement}><span style={{ color: '#333333' }}>&nbsp;Add +&nbsp;</span></Button>\r\n                    )}\r\n                </Flex>\r\n            </VStack>\r\n            <VStack alignItems=\"start\" width={{ base: \"45vw\", md: \"100%\" }}>\r\n                <Image width={{ base: \"45vw\", md: \"100%\" }} maxWidth=\"300px\" maxHeight=\"300px\" height={{ base: \"45vw\", md: \"\" }} borderRadius=\"xl\" src={imageSrc} alt={title} fit=\"cover\" onClick={handleNavigate} loading=\"lazy\" \r\n                    transition=\"all 0.4s linear\"\r\n                    _hover={{\r\n                        transform: \"scale(1.04)\", bg: \"teal.600\",\r\n                    }}\r\n                    _active={{\r\n                        transform: \"scale(1)\",\r\n                    }}/>\r\n            </VStack>\r\n        </HStack>\r\n\r\n    );\r\n};\r\n\r\nexport default Card;","import { HStack, Heading, VStack, Button, ButtonGroup, SimpleGrid, Badge } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState,  } from \"react\";\r\nimport FullScreenSection from \"./FullScreenSection\";\r\nimport Card from \"./Card.js\";\r\nimport { fooditems, } from \"../utils/data\";\r\n\r\nconst MenuSection = () => {\r\n\r\n    //buttonElement.style.backgroundColor = \"#495E57\" ;\r\n    //buttonElement.style.color = \"#495E57\" ;\r\n    const [foodList, setFoodList] = useState(fooditems);\r\n    const [bool, setBool] = useState(\"all\");\r\n    const buttons = [\r\n        { id: 1, type: \"All\" },\r\n        { id: 2, type: \"Main\" },\r\n        { id: 3, type: \"A La Carte\" },\r\n        { id: 4, type: \"Dessert\" },\r\n        { id: 5, type: \"Drink\" },\r\n    ];\r\n    const handleFilter = (type) => {\r\n        let filterdList;\r\n        if (type === \"All\") {\r\n          setBool(\"all\");\r\n          filterdList = fooditems\r\n              .sort((a, b) => a.id - b.id);\r\n          setFoodList(fooditems);\r\n        } else if (type === \"Main\") {\r\n            setBool(\"main\");\r\n            filterdList = fooditems\r\n              .filter((item) => item.category === \"main\")\r\n              .sort((a, b) => a.id - b.id);\r\n            setFoodList(filterdList);\r\n        } else if (type === \"A La Carte\") {\r\n          setBool(\"a la carte\");\r\n          filterdList = fooditems\r\n            .filter((item) => item.category === \"a la carte\")\r\n            .sort((a, b) => a.id - b.id);\r\n          setFoodList(filterdList);\r\n        } else if (type === \"Dessert\") {\r\n          setBool(\"dessert\");\r\n          filterdList = fooditems\r\n            .filter(\r\n              (item) => item.category === \"dessert\"\r\n            )\r\n            .sort((a, b) => a.id - b.id);\r\n          setFoodList(filterdList);\r\n        }else {\r\n            setBool(\"drink\");\r\n            filterdList = fooditems\r\n              .filter((item) => item.category === \"drink\")\r\n              .sort((a, b) => a.id - b.id);\r\n            setFoodList(filterdList);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <FullScreenSection\r\n        justifyContent=\"center\"\r\n        alignItems=\"start\"\r\n        isDarkBackground\r\n        backgroundColor=\"#FFFFFF\"\r\n        py={{ base: 6, md: 12 }}\r\n        width={{ base: \"96vw\", md: \"96vw\" }}\r\n        borderRadius=\"md\"\r\n        >\r\n            <Heading size={{ base: \"md\", md: \"xl\" }} fontWeight=\"bold\" noOfLines={1} color=\"#333333\">&nbsp;MENU</Heading>\r\n            <div style={{ overflowX: 'auto', whiteSpace: 'nowrap', maxWidth: '100%', scrollbarWidth: 'none',}}>\r\n              <ButtonGroup gap={{ base: \"0.2rem\", md: \"0.8rem\" }}>\r\n                  {buttons.map((item) => (\r\n                      <Button\r\n                          size=\"md\"\r\n                          variant=\"outline\"\r\n                          key={item.id}\r\n                          _hover={{ bg: \"#495E57\", color: \"#EDEFEE\" }}\r\n                          onClick={() => handleFilter(item.type)}\r\n                      >\r\n                          {item.type}\r\n                      </Button>\r\n                  ))}\r\n              </ButtonGroup>\r\n            </div>\r\n            <SimpleGrid columns={{ base: 1, md: 2 }} spacing={{ base: 5, md: 10 }}>\r\n                {foodList.map((food) => (\r\n                    <Card\r\n                        key={food.id}\r\n                        id={food.id}\r\n                        title={food.title}\r\n                        category={food.category}\r\n                        type={food.type}\r\n                        monthly={food.monthly}\r\n                        ingredients={food.ingredients}\r\n                        description={food.description}\r\n                        price={food.price}\r\n                        imageSrc={food.getImageSrc()}\r\n                    />\r\n                ))}\r\n            </SimpleGrid>\r\n        </FullScreenSection>\r\n    );\r\n};\r\n\r\nexport default MenuSection;\r\n","import React, { useEffect } from \"react\";\r\nimport Introduction from \"./Introduction\";\r\nimport MenuSection from \"./MenuSection\";\r\nimport { useScreenSize } from \"../context/ScreenSizeContext\";\r\nconst Homepage = () => {\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    };\r\n    const { setPage } = useScreenSize();\r\n    useEffect(() => {\r\n        setPage('homepage');\r\n        const scrollToTopTimeout = setTimeout(handleScrollToTop, 300);\r\n        return () => clearTimeout(scrollToTopTimeout); // Cleanup timeout on unmount\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            <Introduction />\r\n            <MenuSection />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Homepage;","import { HStack, Heading, VStack, Button, Text, Image, useMediaQuery, Box } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport img1 from \"../images/Delivery.jpg\";\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { DeleteIcon, AddIcon, MinusIcon, ArrowBackIcon } from '@chakra-ui/icons';\r\nimport { useScreenSize } from \"../context/ScreenSizeContext\";\r\nimport FullScreenSection from \"./FullScreenSection\";\r\n\r\nconst Order = () => {\r\n    const [isMobile] = useMediaQuery(\"(max-width: 28em)\");\r\n    const { modifyItems, items } = useScreenSize();\r\n    const location = useLocation();\r\n    const { state } = location || {};\r\n\r\n    const {\r\n        id = 0,\r\n        title = \"Default Title\",\r\n        category = \"Default Category\",\r\n        type = \"Default Type\",\r\n        monthly = 0,\r\n        ingredients = [],\r\n        description = \"Default Description\",\r\n        price = 0,\r\n        imageSrc = \"\"\r\n    } = state || {};\r\n\r\n    const [addIngredients, setAddIngredients] = useState(ingredients);\r\n    const [count, setCount] = useState(1);\r\n    const [totalPrice, setTotalPrice] = useState(price);\r\n\r\n    const findIngredientsById = (items, id) => {\r\n        const item = items.find(item => item.id === id);\r\n        return item ? item.ingredients : [];\r\n    };\r\n\r\n    const findCountById = (items, id, addIngredients) => {\r\n        const item = items.find(item => \r\n            item.id === id && \r\n            item.ingredients.length === addIngredients.length && \r\n            item.ingredients.every(ingredient => \r\n                addIngredients.some(addIngredient => addIngredient.name === ingredient.name)\r\n            )\r\n        );\r\n        return item ? item.count : 0;\r\n    };\r\n\r\n    const foundCount = findCountById(items, id, addIngredients);\r\n\r\n    useEffect(() => {\r\n        const ingredientsFromItems = findIngredientsById(items, id);\r\n        setAddIngredients(ingredientsFromItems.length > 0 ? ingredientsFromItems : ingredients);\r\n    }, [id, items, ingredients]);\r\n\r\n    useEffect(() => {\r\n        const ingredientsPrice = addIngredients.reduce((total, item) => {\r\n            return total + parseFloat(item.price.replace('$', ''));\r\n        }, 0);\r\n        setTotalPrice((count * parseFloat(price.replace(\"$\", \"\")) + ingredientsPrice - 3).toFixed(2));\r\n    }, [count, addIngredients, price]);\r\n\r\n    const handleIncrement = () => setCount(prevCount => prevCount + 1);\r\n    const handleDecrement = () => setCount(prevCount => Math.max(prevCount - 1, 1));\r\n    const handleDelete = (ingredientName) => {\r\n        setAddIngredients(prevIngredients => \r\n            prevIngredients.filter(ingredient => ingredient.name !== ingredientName)\r\n        );\r\n    };\r\n\r\n    const buttonEvent = () => {\r\n        modifyItems(id, foundCount + count, addIngredients);\r\n        setCount(1);\r\n    };\r\n\r\n    const renderImage = () => (\r\n        <Box paddingTop={{ base: \"0\", sm: \"4rem\", md: \"2.5rem\" }}>\r\n            <Image\r\n                width={{ base: \"100vh\", md: \"42vw\" }}\r\n                maxHeight={{ base: \"40vh\", md: \"80vh\" }}\r\n                borderRadius=\"xl\"\r\n                src={imageSrc}\r\n                objectFit=\"cover\"\r\n            />\r\n        </Box>\r\n    );\r\n\r\n    const renderDescription = () => (\r\n        <>\r\n            <Heading size={{ base: \"md\", md: \"lg\" }} fontWeight=\"semibold\" color=\"#333333\">{title}</Heading>\r\n            <Text color=\"#333333\" fontSize={{ base: \"md\", md: \"lg\" }}>{description}</Text>\r\n        </>\r\n    );\r\n\r\n    const renderIngredients = () => (\r\n        <VStack alignItems=\"start\" width=\"100%\">\r\n            {addIngredients.map((item, index) => (\r\n                <HStack key={index} width=\"100%\" justifyContent=\"space-between\">\r\n                    <Text color=\"#333333\" fontSize=\"md\" width=\"10rem\">{item.name}</Text>\r\n                    <Text color=\"#333333\" fontSize=\"md\" width=\"7rem\">{item.price}</Text>\r\n                    <DeleteIcon onClick={() => handleDelete(item.name)} color=\"#333333\" width={{ base: \"5rem\", md: \"5rem\" }} _hover={{ backgroundColor: '#FCF5CF', cursor: 'pointer', borderRadius: 'md' }}/>\r\n                </HStack>\r\n            ))}\r\n        </VStack>\r\n    );\r\n\r\n    return (\r\n        <FullScreenSection\r\n            justifyContent=\"center\"\r\n            alignItems=\"start\"\r\n            isDarkBackground\r\n            backgroundColor=\"#FFFFFF\"\r\n            py={{ base: 0, md: 12 }}\r\n            minHeight={{ base: '25vh' }}\r\n        >\r\n            <VStack alignItems=\"left\" width=\"auto\" backgroundColor=\"#FFFFFF\">\r\n                {isMobile ? (\r\n                    <HStack>\r\n                        <VStack alignItems=\"start\" width=\"100%\">\r\n                            <Link to=\"/order-online\">\r\n                                <ArrowBackIcon bgColor=\"#495E57\" color=\"#EDEFEE\" w='2.5rem' h='2.5rem' borderRadius=\"full\" />\r\n                            </Link>\r\n                            <VStack alignItems=\"start\" alignSelf=\"start\" width=\"100%\">\r\n                                {renderImage()}\r\n                            </VStack>\r\n                                {renderDescription()}\r\n                            <HStack width=\"100%\">\r\n                                <VStack width=\"100%\" alignItems=\"start\">\r\n                                    <HStack>\r\n                                        <Image src={img1} width='4rem' height='4rem' fit=\"cover\" />\r\n                                        <Text color=\"#333333\" fontSize=\"md\">Delivery Elasp: 20 minutes</Text>\r\n                                    </HStack>\r\n                                </VStack>\r\n                            </HStack>\r\n                            <br />\r\n                            <Heading size=\"md\" fontWeight=\"semibold\" color=\"#333333\">Add</Heading>\r\n                            {renderIngredients()}\r\n                            <HStack alignSelf=\"center\" gap={10} py={3}>\r\n                                <Button onClick={handleDecrement}><MinusIcon color=\"#333333\" /></Button>\r\n                                <Text color=\"#333333\" fontSize={{ base: \"md\", md: \"lg\" }}>{count}</Text>\r\n                                <Button onClick={handleIncrement}><AddIcon color=\"#333333\" /></Button>\r\n                            </HStack>\r\n                            <Button colorScheme=\"yellow\" alignSelf=\"center\" width=\"full\" onClick={buttonEvent}>\r\n                                Add for ${totalPrice}\r\n                            </Button>\r\n                            <br />\r\n                        </VStack>\r\n                    </HStack>\r\n                ) : (\r\n                    <HStack>\r\n                        <VStack alignItems=\"start\" alignSelf=\"start\" width={{ base: \"47vw\", md: \"42vw\" }} px={{ base: 0, md: 10 }}>\r\n                            {renderImage()}\r\n                        </VStack>\r\n                        <VStack alignItems=\"start\" width={{ base: \"47vw\", md: \"40vw\" }} px={{ base: 0, md: 10 }}>\r\n                            <Link to=\"/order-online\">\r\n                                <ArrowBackIcon bgColor=\"#495E57\" color=\"#EDEFEE\" w='2.5rem' h='2.5rem' borderRadius=\"full\" />\r\n                            </Link>\r\n                            {renderDescription()}\r\n                            <HStack>\r\n                                <VStack width=\"100%\" alignItems=\"start\">\r\n                                    <HStack>\r\n                                        <Image src={img1} width='3.4rem' height='3.4rem' fit=\"cover\" />\r\n                                        <Text color=\"#333333\" fontSize=\"md\">Delivery Elasp: 20 minutes</Text>\r\n                                    </HStack>\r\n                                </VStack>\r\n                            </HStack>\r\n                            <br />\r\n                            <Heading size=\"md\" fontWeight=\"semibold\" color=\"#333333\">Add</Heading>\r\n                            {renderIngredients()}\r\n                            <HStack alignSelf=\"center\" gap={10} py={3}>\r\n                                <Button onClick={handleDecrement}><MinusIcon color=\"#333333\" /></Button>\r\n                                <Text color=\"#333333\" fontSize={{ base: \"md\", md: \"lg\" }}>{count}</Text>\r\n                                <Button onClick={handleIncrement}><AddIcon color=\"#333333\" /></Button>\r\n                            </HStack>\r\n                            <Button colorScheme=\"yellow\" alignSelf=\"center\" width=\"full\" onClick={buttonEvent}>\r\n                                Add for ${totalPrice}\r\n                            </Button>\r\n                            <br />\r\n                        </VStack>\r\n                    </HStack>\r\n                )}\r\n            </VStack>\r\n        </FullScreenSection>\r\n    );\r\n};\r\n\r\nexport default Order;","import { Heading, VStack, Image, SimpleGrid} from \"@chakra-ui/react\";\r\nimport React, { useEffect } from \"react\";\r\nimport FullScreenSection from \"./FullScreenSection\";\r\nimport Order from \"./Order\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMotorcycle, } from '@fortawesome/free-solid-svg-icons';\r\nimport Wave from 'react-wavify';\r\nconst OrderPage = () => {\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const scrollToTopTimeout = setTimeout(handleScrollToTop, 300);\r\n        return () => clearTimeout(scrollToTopTimeout); // Cleanup timeout on unmount\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <FullScreenSection\r\n            justifyContent=\"center\"\r\n            alignItems=\"start\"\r\n            isDarkBackground\r\n            backgroundColor=\"#495E57\"\r\n            minHeight={{ base: \"20vh\", md: \"25vh\" }}\r\n            width=\"100%\"\r\n            zIndex=\"100\"\r\n        >\r\n            <br/><br/>\r\n            <SimpleGrid columns={2} alignItems=\"center\" width=\"100%\">\r\n                    <VStack alignItems=\"start\" width=\"70vw\">\r\n                        <Heading size={{ base: \"md\", md: \"2xl\" }} fontWeight=\"semibold\" color=\"#F4CE14\">ORDER FOR DELIVERY!</Heading>\r\n                    </VStack>\r\n                    <VStack alignItems=\"flex-end\" width=\"100%\"><FontAwesomeIcon icon={faMotorcycle} size=\"5x\"/></VStack>\r\n                </SimpleGrid>\r\n        </FullScreenSection>\r\n        <Wave fill='#495e57'\r\n                paused={false}\r\n                style={{ display: 'flex', transform: 'scaleY(-1)', marginTop: '-100px' }}\r\n                options={{\r\n                height: 20,\r\n                amplitude: 20,\r\n                speed: 0.15,\r\n                points: 3\r\n                }}\r\n            />\r\n        <Order/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderPage;","import { HStack, Heading, VStack, Image, SimpleGrid } from \"@chakra-ui/react\";\r\nimport React, { useEffect } from \"react\";\r\nimport FullScreenSection from \"./FullScreenSection\";\r\nimport MenuSection from \"./MenuSection\";\r\nimport { useScreenSize } from \"../context/ScreenSizeContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMotorcycle, } from '@fortawesome/free-solid-svg-icons';\r\nimport Wave from 'react-wavify';\r\nconst OrderOnline = () => {\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    };\r\n    const { setPage } = useScreenSize();\r\n    useEffect(() => {\r\n        setPage('orderonline');\r\n        const scrollToTopTimeout = setTimeout(handleScrollToTop, 300);\r\n        return () => clearTimeout(scrollToTopTimeout); // Cleanup timeout on unmount\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <FullScreenSection\r\n                justifyContent=\"center\"\r\n                alignItems=\"start\"\r\n                isDarkBackground\r\n                backgroundColor=\"#495E57\"\r\n                minHeight={{ base: \"20vh\", md: \"25vh\" }}\r\n                width=\"100%\"\r\n                borderRadius=\"md\"\r\n                zIndex=\"100\"\r\n            >\r\n                <br/><br/>\r\n                <SimpleGrid columns={2} alignItems=\"center\" width=\"100%\">\r\n                    <VStack alignItems=\"start\" width=\"70vw\">\r\n                        <Heading size={{ base: \"md\", md: \"2xl\" }} fontWeight=\"semibold\" color=\"#F4CE14\">ORDER FOR DELIVERY!</Heading>\r\n                        <Heading size={{ base: \"md\", md: \"xl\" }} fontWeight=\"medium\" noOfLines={1} color=\"#EDEFEE\">This Weeks Special!</Heading>\r\n                    </VStack>\r\n                    <VStack alignItems=\"flex-end\" width=\"100%\"><FontAwesomeIcon icon={faMotorcycle} size=\"5x\"/></VStack>\r\n                </SimpleGrid>\r\n            </FullScreenSection>\r\n            <Wave fill='#495e57'\r\n                paused={false}\r\n                style={{ display: 'flex', transform: 'scaleY(-1)', marginTop: '-100px' }}\r\n                options={{\r\n                height: 20,\r\n                amplitude: 20,\r\n                speed: 0.15,\r\n                points: 3\r\n                }}\r\n            />\r\n            <MenuSection />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderOnline;","import { useState } from \"react\";\r\n\r\nconst wait = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nconst useSubmit = () => {\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [response, setResponse] = useState(null);\r\n\r\n  const submit = async (url, data, formType) => {\r\n    setLoading(true);\r\n    try {\r\n      await wait(2000);\r\n      let message;\r\n\r\n      switch (formType) {\r\n        case 'signup':\r\n          message = `Thanks for signing up, ${data.firstName}! Please check your email for confirmation.`;\r\n          break;\r\n        case 'login':\r\n          message = `Welcome back!`;\r\n          break;\r\n        case 'reservation':\r\n          message = `Thanks for your reservation ${data.firstName}, we will reserve ${data.guests} persons table for you at ${data.time} on ${data.date}!`;\r\n          break;\r\n        default:\r\n          message = \"Submission successful!\";\r\n      }\r\n      setResponse({\r\n        type: 'success',\r\n        message,\r\n      });\r\n    } catch (error) {\r\n      setResponse({\r\n        type: 'error',\r\n        message: 'Something went wrong, please try again later!',\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { isLoading, response, submit };\r\n};\r\n\r\nexport default useSubmit;","import {\r\n    HStack,\r\n    Heading,\r\n    VStack,\r\n    Button,\r\n    FormControl,\r\n    FormErrorMessage,\r\n    FormLabel,\r\n    Input,\r\n    Image,\r\n    Radio,\r\n    RadioGroup,\r\n    useMediaQuery,\r\n    Text\r\n} from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport FullScreenSection from \"./FullScreenSection\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport useSubmit from \"../hooks/useSubmit\";\r\nimport { useAlertContext } from \"../context/alertContext\";\r\nimport img1 from \"../images/small/Intro_Restaurantfood.jpg\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser, faEnvelope, faChair } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst getCurrentDate = () => {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = String(today.getMonth() + 1).padStart(2, '0');\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst Reservation = () => {\r\n    const { isLoading, response, submit } = useSubmit();\r\n    const { onOpen } = useAlertContext();\r\n    const [click, setClick] = useState(0);\r\n    const [person, setPerson] = useState(\"\");\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            date: \"\",\r\n            time: \"\",\r\n            guests: '',\r\n            firstName: \"\",\r\n            email: \"\"\r\n        },\r\n        onSubmit: (values) => {\r\n            submit('https://john.com/contactme', values, 'reservation');\r\n        },\r\n        validationSchema: Yup.object({\r\n            date: Yup.date().required(\"Required\"),\r\n            time: Yup.string().required(\"Required\"),\r\n            firstName: Yup.string().required(\"Required\"),\r\n            email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\r\n            guests: Yup.string().required(\"Required\"),\r\n        }),\r\n    });\r\n    const handleChange = (value) => {\r\n        formik.setFieldValue(\"guests\", value); // Update Formik state\r\n    };\r\n    useEffect(() => {\r\n        if (response) {\r\n            onOpen(response.type, response.message);\r\n            if (response.type === 'success') {\r\n                formik.resetForm();\r\n            }\r\n        }\r\n    }, [response]);\r\n\r\n    const toggleEvent = () => setClick(1);\r\n    const backEvent = () => setClick(0);\r\n    //const handleChange = value => setPerson(value);\r\n    const [isMobile] = useMediaQuery(\"(max-width: 48em)\");\r\n    return (\r\n        <FullScreenSection\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            isDarkBackground\r\n            backgroundColor=\"#FFFFFF\"\r\n            py={{ base: 0, md: 10 }}\r\n            color=\"#333333\"\r\n            borderRadius=\"md\"\r\n        >\r\n            <br/>\r\n            <VStack gap=\"6\" alignItems=\"start\">\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <VStack spacing={2}>\r\n                        {click === 0 ? (\r\n                            <VStack width={{ base: \"96vw\", md: \"35rem\" }} borderColor=\"#49SE57\" borderWidth=\"1px\" padding=\"2rem\" gap={{ base: \"1.4rem\", md: \"2rem\" }}>\r\n                                <Heading size={{ base: \"md\", md: \"xl\" }} fontWeight=\"semibold\" color=\"#333333\">Book your table</Heading>\r\n                                <FormControl isInvalid={formik.touched.date && !!formik.errors.date}>\r\n                                    <FormLabel htmlFor=\"date\">Date<span style={{ color: 'red' }}>*</span></FormLabel>\r\n                                    <Input\r\n                                        id=\"date\"\r\n                                        name=\"date\"\r\n                                        type=\"date\"\r\n                                        min={getCurrentDate()}\r\n                                        {...formik.getFieldProps(\"date\")}\r\n                                    />\r\n                                    <FormErrorMessage>{formik.errors.date}</FormErrorMessage>\r\n                                </FormControl>\r\n                                <FormControl isInvalid={formik.touched.time && !!formik.errors.time}>\r\n                                    <FormLabel htmlFor=\"time\">Time<span style={{ color: 'red' }}>*</span></FormLabel>\r\n                                    <Input\r\n                                        id=\"time\"\r\n                                        name=\"time\"\r\n                                        type=\"time\"\r\n                                        {...formik.getFieldProps(\"time\")}\r\n                                    />\r\n                                    <FormErrorMessage>{formik.errors.time}</FormErrorMessage>\r\n                                </FormControl>\r\n                                <FormControl>\r\n                                    <HStack justify=\"space-between\" align=\"center\" width=\"95%\">\r\n                                        <FormLabel htmlFor=\"guests\">Guests<span style={{ color: 'red' }}>*</span></FormLabel>\r\n                                        <FontAwesomeIcon icon={faChair} />\r\n                                    </HStack>\r\n                                    <RadioGroup defaultValue=\"2\" value={formik.values.guests} onChange={handleChange}>\r\n                                        <HStack gap=\"6\">\r\n                                            <Radio value=\"2\">2-person table</Radio>\r\n                                            <Radio value=\"4\">4-person table</Radio>\r\n                                            <Radio value=\"6\">6-person table</Radio>\r\n                                        </HStack>\r\n                                    </RadioGroup>\r\n                                    <FormErrorMessage>{formik.errors.guests}</FormErrorMessage>\r\n                                </FormControl>\r\n                                <Button\r\n                                    onClick={toggleEvent}\r\n                                    size=\"md\"\r\n                                    colorScheme=\"yellow\"\r\n                                    width=\"full\"\r\n                                    isLoading={isLoading}\r\n                                    isDisabled={\r\n                                        !!formik.errors.date || !formik.touched.date ||\r\n                                        !!formik.errors.time || !formik.touched.time ||\r\n                                        !formik.values.guests\r\n                                    }\r\n                                >\r\n                                    <span style={{ color: '#333333' }}>Next</span>\r\n                                </Button>\r\n                            </VStack>\r\n                        ) : (\r\n                            <VStack width={{ base: \"100vw\", md: \"35rem\" }} borderColor=\"#49SE57\" borderWidth=\"1px\" padding=\"2rem\" gap=\"2rem\">\r\n                                <Heading size={{ base: \"md\", md: \"xl\" }} fontWeight=\"semibold\" color=\"#333333\">Book your table</Heading>\r\n                                <HStack justify=\"space-between\" align=\"center\" width=\"95%\" borderWidth=\"thin\" borderColor=\"#495E57\" padding={5} borderRadius=\"3xl\" backgroundColor=\"#495E57\" color=\"#EDEFEE\">\r\n                                    <Text size=\"md\" fontWeight=\"normal\">\r\n                                        <span style={{ color: '#F4CE14' }}>Date: </span>{isMobile ? <br /> : null}{formik.values.date}\r\n                                    </Text>\r\n                                    <Text size=\"md\" fontWeight=\"normal\">\r\n                                        <span style={{ color: '#F4CE14' }}>Time: </span>{isMobile ? <br /> : null}{formik.values.time}\r\n                                    </Text>\r\n                                    <Text size=\"md\" fontWeight=\"normal\">\r\n                                        <span style={{ color: '#F4CE14' }}>Persons: </span>{isMobile ? <br /> : null}{formik.values.guests}\r\n                                    </Text>\r\n                                </HStack>\r\n                                <FormControl isInvalid={formik.touched.firstName && !!formik.errors.firstName}>\r\n                                    <HStack justify=\"space-between\" align=\"center\" width=\"95%\">\r\n                                        <FormLabel htmlFor=\"firstName\">Name</FormLabel>\r\n                                        <FontAwesomeIcon icon={faUser} />\r\n                                    </HStack>\r\n                                    <Input\r\n                                        id=\"firstName\"\r\n                                        name=\"firstName\"\r\n                                        placeholder=\"First Name\"\r\n                                        {...formik.getFieldProps(\"firstName\")}\r\n                                    />\r\n                                    <FormErrorMessage>{formik.errors.firstName}</FormErrorMessage>\r\n                                </FormControl>\r\n                                <FormControl isInvalid={formik.touched.email && !!formik.errors.email}>\r\n                                    <HStack justify=\"space-between\" align=\"center\" width=\"95%\">\r\n                                        <FormLabel htmlFor=\"email\">Email Address<span style={{ color: 'red' }}>*</span></FormLabel>\r\n                                        <FontAwesomeIcon icon={faEnvelope} />\r\n                                    </HStack>\r\n                                    <Input\r\n                                        id=\"email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        {...formik.getFieldProps(\"email\")}\r\n                                    />\r\n                                    <FormErrorMessage>{formik.errors.email}</FormErrorMessage>\r\n                                </FormControl>\r\n                                <HStack width=\"100%\">\r\n                                    <Button onClick={backEvent} size=\"md\" colorScheme=\"yellow\" width=\"30%\">\r\n                                        <span style={{ color: '#333333' }}>Back</span>\r\n                                    </Button>\r\n                                    <Button type=\"submit\" size=\"md\" colorScheme=\"yellow\" width=\"70%\" isLoading={isLoading}>\r\n                                        <span style={{ color: '#333333' }}>Submit</span>\r\n                                    </Button>\r\n                                </HStack>\r\n                            </VStack>\r\n                        )}\r\n                        <Image src={img1} width=\"full\" height=\"40vh\" borderRadius=\"md\" fit=\"cover\" />\r\n                    </VStack>\r\n                </form>\r\n            </VStack>\r\n        </FullScreenSection>\r\n    );\r\n};\r\n\r\nexport default Reservation;","import { SimpleGrid, Heading, VStack, } from \"@chakra-ui/react\";\r\nimport React, { useEffect } from \"react\";\r\nimport FullScreenSection from \"./FullScreenSection\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBowlFood } from '@fortawesome/free-solid-svg-icons';\r\nimport Reservation from \"./Reservation.js\";\r\nimport { useScreenSize } from \"../context/ScreenSizeContext\";\r\nimport Wave from 'react-wavify';\r\nconst ReservationPage = () => {\r\n    const { setPage } = useScreenSize();\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPage('reservation');\r\n        const scrollToTopTimeout = setTimeout(handleScrollToTop, 300);\r\n        return () => clearTimeout(scrollToTopTimeout); // Cleanup timeout on unmount\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <FullScreenSection\r\n                justifyContent=\"center\"\r\n                alignItems=\"start\"\r\n                isDarkBackground\r\n                backgroundColor=\"#495E57\"\r\n                minHeight={{ base: \"20vh\", md: \"25vh\" }}\r\n                width=\"100%\"\r\n                zIndex=\"100\"\r\n            >\r\n                <br/><br/>\r\n                <SimpleGrid columns={2} alignItems=\"center\" width=\"100%\">\r\n                    <VStack alignItems=\"start\" width=\"70vw\">\r\n                        <Heading size={{ base: \"md\", md: \"2xl\" }} fontWeight=\"semibold\" noOfLines={1} color=\"#F4CE14\">Reservation</Heading>\r\n                    </VStack>\r\n                    <VStack alignItems=\"flex-end\" width=\"100%\"><FontAwesomeIcon icon={faBowlFood} size=\"5x\"/></VStack>\r\n                </SimpleGrid>\r\n            </FullScreenSection>\r\n            <Wave fill='#495e57'\r\n                paused={false}\r\n                style={{ display: 'flex', transform: 'scaleY(-1)', marginTop: '-100px' }}\r\n                options={{\r\n                height: 20,\r\n                amplitude: 20,\r\n                speed: 0.15,\r\n                points: 3\r\n                }}\r\n            />\r\n            <Reservation />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ReservationPage;\r\n//<FontAwesomeIcon icon={faUser} />","import { HStack, Heading, VStack, Text, Image, Button, Flex, SimpleGrid } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { DeleteIcon, AddIcon } from '@chakra-ui/icons';\r\nimport { useScreenSize } from \"../context/ScreenSizeContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nconst CartItems = ({ id, title, category, type, monthly, ingredients, description, price, imageSrc }) => {\r\n    const navigate = useNavigate();\r\n    const handleNavigate = () => {\r\n        navigate(`/order-online/order/${title.replace(/ /g, \"\")}`, { state: dataToPass });\r\n    };\r\n    const dataToPass = {\r\n        id: id,\r\n        title: title,\r\n        category: category,\r\n        type: type,\r\n        monthly: monthly,\r\n        ingredients: ingredients,\r\n        description: description,\r\n        price: price,\r\n        imageSrc: imageSrc,\r\n    };\r\n    const { modifyItems, items } = useScreenSize();\r\n    const ingredientsNames = ingredients.map(item => item.name).join(', ');\r\n\r\n    const findCountById = (items, id, addIngredients) => {\r\n        const item = items.find((item) => item.id === id &&\r\n            item.ingredients.length === addIngredients.length &&\r\n            item.ingredients.every(ingredient =>\r\n                addIngredients.some(addIngredient => addIngredient.name === ingredient.name)\r\n            )\r\n        );\r\n        //console.log(\"item\",item);\r\n        return item ? item.count : 0;\r\n    };\r\n    const initialCount = findCountById(items, id, ingredients);\r\n\r\n\r\n\r\n    //const initialCount = items.find(item => item.id === id)?.count || 0;\r\n    const [count, setCount] = useState(initialCount);\r\n\r\n    useEffect(() => {\r\n        modifyItems(id, count,ingredients);\r\n    }, [id, count, modifyItems]);\r\n\r\n    const handleIncrement = () => setCount(prevCount => prevCount + 1);\r\n    const handleDecrement = () => setCount(prevCount => Math.max(prevCount - 1, 0));\r\n    return (\r\n        <HStack\r\n            color=\"#333333\"\r\n            backgroundColor=\"#FFFFFF\"\r\n            borderWidth=\"1px\"\r\n            borderRadius=\"md\"\r\n            alignItems=\"center\"\r\n            width=\"100%\"\r\n        >\r\n            <VStack alignItems=\"start\" width=\"39vw\">\r\n                <Image\r\n                    width={{ base: \"35vw\", md: \"25vw\" }}\r\n                    height={{ base: \"35vw\", md: \"25vh\" }}\r\n                    borderRadius=\"xl\"\r\n                    alignSelf=\"start\"\r\n                    src={imageSrc}\r\n                    alt={title}\r\n                    fit=\"cover\"\r\n                    loading=\"lazy\"\r\n                    transition=\"all 0.4s linear\"\r\n                    _hover={{ transform: \"scale(1.04)\", bg: \"teal.600\" }}\r\n                    _active={{ transform: \"scale(1)\" }}\r\n                    onClick={handleNavigate}\r\n                />\r\n            </VStack>\r\n            <VStack alignItems=\"start\" width=\"39vw\" gap={{ base: \"0\" }}>\r\n                <Heading size={{ base: \"md\", md: \"lg\" }} fontWeight=\"semibold\" color=\"#333333\" onClick={handleNavigate}>\r\n                    {title}\r\n                </Heading>\r\n                <Text color=\"#333333\" fontSize={{ base: \"md\", md: \"lg\" }} noOfLines={3}>\r\n                    {type}\r\n                </Text>\r\n                <Text color=\"#333333\" fontSize={{ base: \"md\", md: \"lg\" }} noOfLines={3}>\r\n                    {ingredientsNames}\r\n                </Text>\r\n                <SimpleGrid columns={1} spacing={5} alignSelf=\"start\" py={{ base: 0, md: 5 }} width=\"100%\">\r\n                    {count > 0 ? (\r\n                        <HStack alignSelf=\"center\" gap={5} ml=\"-10px\">\r\n                            <Button onClick={handleDecrement}>\r\n                                <FontAwesomeIcon icon={faMinus} color=\"#333333\"/>\r\n                            </Button>\r\n                            <Text color=\"#333333\" fontSize=\"lg\">{count}</Text>\r\n                            <Button onClick={handleIncrement}>\r\n                                <FontAwesomeIcon icon={faPlus} color=\"#333333\"/>\r\n                            </Button>\r\n                        </HStack>\r\n                    ) : (\r\n                        console.log(`You removed the item ${title}`)\r\n                    )}\r\n                </SimpleGrid>\r\n            </VStack>\r\n            <VStack alignItems=\"right\" width=\"20vw\">\r\n                <Text size={{ base: \"md\", md: \"lg\" }} fontWeight=\"semibold\" color=\"#FC2063\" textAlign=\"right\">\r\n                    {(parseFloat(price.replace(\"$\", \"\")) * count).toFixed(2)}\r\n                </Text>\r\n            </VStack>\r\n        </HStack>\r\n    );\r\n};\r\n\r\nexport default CartItems;","import { VStack, HStack, Text, } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport FullScreenSection from \"./FullScreenSection\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { ChevronDownIcon } from '@chakra-ui/icons'\r\nimport { faLocationDot, faUser, faPhone } from '@fortawesome/free-solid-svg-icons';\r\nconst DeliveryAddress = () => {\r\n\r\n    return (\r\n        <>\r\n            <FullScreenSection\r\n                justifyContent=\"center\"\r\n                alignItems=\"start\"\r\n                isDarkBackground\r\n                backgroundColor=\"#FFFFFF\"\r\n                minHeight=\"3rem\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                borderStyle=\"solid\"\r\n                padding=\"0.5rem\"\r\n                width={{base: \"91vw\" , md: \"93vw\" }}\r\n                boxShadow=\"0 4px 8px rgba(0, 0, 0, 0.2)\"\r\n            >\r\n                <HStack width=\"100%\" >\r\n                    <VStack alignItems=\"start\" width=\"100%\">\r\n                        <HStack width=\"100%\">\r\n                            <FontAwesomeIcon icon={faLocationDot} color=\"#333333\"/>\r\n                            <Text fontSize={{base: \"md\" , md: \"lg\" }} fontWeight=\"medium\" color=\"#333333\"align=\"start\">410, 4 MAN FUK BUILDING, YUET WAH STREET 40, HONG KONG</Text>\r\n                        </HStack>\r\n                        <HStack width=\"100%\">\r\n                            <FontAwesomeIcon icon={faUser} color=\"#333333\"/>\r\n                            <Text fontSize={{base: \"md\" , md: \"lg\" }} color=\"#333333\"align=\"start\"  width={{base:\"7rem\", md:\"10rem\"}}>Richard NG</Text>\r\n                            <FontAwesomeIcon icon={faPhone} color=\"#333333\"/>\r\n                            <Text fontSize={{base: \"md\" , md: \"lg\" }} color=\"#333333\"align=\"end\">+ 188 1890 2621</Text>\r\n                        </HStack>\r\n                    </VStack>\r\n                    <VStack alignItems=\"flex-end\" width=\"1rem\"><ChevronDownIcon w={5} h={5} color=\"#333333\"/></VStack>\r\n                </HStack>\r\n            </FullScreenSection>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DeliveryAddress;","import { SimpleGrid, Heading, VStack, HStack, Text, Spacer } from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport FullScreenSection from \"./FullScreenSection\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAlipay, faWeixin, faCcApplePay } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { ChevronDownIcon } from '@chakra-ui/icons'\r\nimport { faLocationDot, faUser, faPhone } from '@fortawesome/free-solid-svg-icons';\r\nimport { Radio, RadioGroup } from \"@chakra-ui/react/radio\"\r\nconst Payment = () => {\r\n    const [value, setValue] = useState(\"\");\r\n    return (\r\n        <>\r\n            <FullScreenSection\r\n                justifyContent=\"center\"\r\n                alignItems=\"start\"\r\n                isDarkBackground\r\n                backgroundColor=\"#FFFFFF\"\r\n                minHeight=\"3rem\"\r\n                width={{base: \"95vw\" , md: \"92vw\" }}\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"lg\"\r\n                borderStyle=\"solid\"\r\n                padding=\"0.5rem\"\r\n                boxShadow=\"0 4px 8px rgba(0, 0, 0, 0.2)\"\r\n            >\r\n                    <VStack alignItems=\"start\" width=\"100%\">\r\n                    <RadioGroup color=\"#333333\" borderColor=\"#333333\" value={value} onChange={(e) => setValue(e)} width=\"100%\">\r\n                        <HStack width=\"100%\">\r\n                            <FontAwesomeIcon icon={faAlipay} color=\"#333333\" />\r\n                            <label htmlFor=\"alipay\">\r\n                                <Text fontSize={{base: \"md\" , md: \"lg\" }} fontWeight=\"medium\" color=\"#333333\" align=\"start\"> +852 5114 2452</Text>\r\n                            </label>\r\n                            <Spacer />\r\n                            <Radio id=\"alipay\" value=\"alipay\" colorScheme=\"gray\" borderColor=\"#333333\" />\r\n                        </HStack>\r\n                        <HStack width=\"100%\">\r\n                            <FontAwesomeIcon icon={faWeixin} color=\"#333333\" />\r\n                            <label htmlFor=\"wechatpay\">\r\n                                <Text fontSize={{base: \"md\" , md: \"lg\" }} fontWeight=\"medium\" color=\"#333333\" align=\"start\"> +86 188 1890 2621</Text>\r\n                            </label>\r\n                            <Spacer />\r\n                            <Radio id=\"wechatpay\" value=\"wechatpay\" colorScheme=\"gray\" borderColor=\"#333333\" />\r\n                        </HStack>\r\n                        <HStack width=\"100%\">\r\n                            <FontAwesomeIcon icon={faCcApplePay} color=\"#333333\" />\r\n                            <label htmlFor=\"applepay\">\r\n                                <Text fontSize={{base: \"md\" , md: \"lg\" }} fontWeight=\"medium\" color=\"#333333\" align=\"start\"> wuzhengying666@gmail.com</Text>\r\n                            </label>\r\n                            <Spacer />\r\n                            <Radio id=\"applepay\" value=\"applepay\" colorScheme=\"gray\" borderColor=\"#333333\" />\r\n                        </HStack>\r\n                    </RadioGroup>\r\n\r\n                    </VStack>\r\n            </FullScreenSection>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Payment;","import {\r\n    HStack,\r\n    Heading,\r\n    VStack,\r\n    Button,\r\n    SimpleGrid,\r\n    Divider,\r\n    useToast,\r\n    Text,\r\n    Box,\r\n    Flex\r\n} from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport FullScreenSection from \"./FullScreenSection\";\r\nimport CartItems from \"./CartItems\";\r\nimport { fooditems } from \"../utils/data\";\r\nimport { useScreenSize } from \"../context/ScreenSizeContext\";\r\nimport { Link } from 'react-router-dom';\r\nimport useSubmit from \"../hooks/useSubmit\";\r\nimport DeliveryAddress from \"./DeliveryAddress\"\r\nimport Payment from \"./Payment\";\r\n\r\nconst CustomToastDescription = ({ success }) => {\r\n    return (\r\n        <Text fontSize=\"lg\" fontStyle=\"italic\" lineHeight=\"1.5\">\r\n            {success ? (\r\n                <>\r\n                    Your order has been successfully placed!<br />\r\n                    Your food will be delivered in 10 mins.\r\n                </>\r\n            ) : (\r\n                <>\r\n                    There was an error placing your order.<br />\r\n                    Please try again later.\r\n                </>\r\n            )}\r\n        </Text>\r\n    );\r\n};\r\n\r\nconst Cart = () => {\r\n    const [foodList, setFoodList] = useState([]);\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n    const [totalCount, setTotalCount] = useState(0);\r\n    const [confirm, setConfirm] = useState(false);\r\n    const { items, setItems, fireConfetti } = useScreenSize();\r\n    const { isLoading, submit } = useSubmit();\r\n    const toast = useToast();\r\n\r\n    const cartFilter = (items) => items.filter(item => item.count !== 0).sort((a, b) => a.id - b.id);\r\n\r\n    const calculateTotalPrice = (items) => {\r\n        return items.reduce((total, item) => {\r\n            const price = parseFloat(item.price.replace('$', ''));\r\n            return total + (price * item.count);\r\n        }, 0);\r\n    };\r\n\r\n    const calculateTotalCount = (items) => items.reduce((total, item) => total + item.count, 0);\r\n\r\n    const deliveryPrice = (count) => count * 10 + 12;\r\n    const filteredItems = cartFilter(items);\r\n    useEffect(() => {\r\n        const filteredItems = cartFilter(items);\r\n        const combinedData = filteredItems\r\n            .filter(count => fooditems.some(food => food.id === count.id))\r\n            .map(count => {\r\n                const food = fooditems.find(food => food.id === count.id);\r\n                return {\r\n                    ...food,\r\n                    count: count.count,\r\n                    key: count.key,\r\n                    ingredients: count.ingredients,\r\n                    //price: count.price,\r\n                };\r\n            });\r\n\r\n        setFoodList(combinedData);\r\n        setTotalPrice(calculateTotalPrice(combinedData));\r\n        setTotalCount(calculateTotalCount(combinedData));\r\n    }, [items]);\r\n\r\n    const handleOrderSubmit = async () => {\r\n        const orderDetails = { foodList, totalPrice, totalCount };\r\n        try {\r\n            setConfirm(false);\r\n            await submit('https://john.com/contactme', orderDetails);\r\n            setItems([]);\r\n            toast({\r\n                title: <Heading size=\"md\" fontWeight=\"semibold\" lineHeight=\"1.5\">Order Placed.</Heading>,\r\n                description: <CustomToastDescription success />,\r\n                status: \"success\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n            });\r\n            fireConfetti();\r\n            setTimeout(() => window.scrollTo({ top: 0, behavior: \"smooth\" }), 300);\r\n        } catch {\r\n            setConfirm(false);\r\n            toast({\r\n                title: <Heading size=\"md\" fontWeight=\"semibold\" lineHeight=\"1.5\">Order Failed.</Heading>,\r\n                description: <CustomToastDescription />,\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n            });\r\n        }\r\n    };\r\n    const toggleComfirmForm = () => {\r\n        setConfirm((prev) => !prev);\r\n    };\r\n\r\n    const PlaceOrderComfirm = () => {\r\n        return(\r\n            <Flex\r\n            height=\"100vh\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            position=\"fixed\" // Fixed positioning to float above other content\r\n            top=\"0\"\r\n            left=\"0\"\r\n            right=\"0\"\r\n            bottom=\"0\"\r\n            zIndex=\"1000\" // Ensure it appears above other content\r\n            backgroundColor=\"rgba(0, 0, 0, 0.5)\" // Semi-transparent backdrop\r\n        >\r\n            <Box\r\n                maxWidth={{ base: '95%', md: '450px' }}\r\n                padding=\"4rem\"\r\n                shadow=\"rgba(17, 17, 26, 0.1) 0px 4px 16px,\r\n                rgba(17, 17, 26, 0.1) 0px 8px 24px, rgba(17, 17, 26, 0.1) 0px 16px 56px\"\r\n                backgroundColor=\"#FFFFFF\"\r\n                borderRadius=\"2xl\"\r\n                position=\"relative\" // Use relative positioning for the box\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                gap=\"2.5rem\"\r\n                letterSpacing=\"0.5px\"\r\n            >\r\n                <VStack width=\"100%\" justifyContent=\"space-between\">\r\n                <Heading size=\"md\" fontWeight=\"semibold\" lineHeight=\"2\" color=\"#333333\">Are You Sure Comfirm Order?</Heading>\r\n                    <HStack width=\"100%\" justifyContent=\"space-between\">\r\n                        <Button onClick={handleOrderSubmit} size=\"md\" colorScheme=\"yellow\" width=\"30%\">\r\n                            <span style={{ color: '#333333' }}>OK</span>\r\n                        </Button>\r\n                        <Button onClick={toggleComfirmForm} size=\"md\" colorScheme=\"yellow\" width=\"30%\">\r\n                            <span style={{ color: '#333333' }}>Cancel</span>\r\n                        </Button>\r\n                    </HStack>\r\n                </VStack>\r\n            </Box>\r\n        </Flex>\r\n        );\r\n    };\r\n    //console.log(\"foodList\",foodList)\r\n    return (\r\n        <>\r\n        {confirm ? (\r\n            <PlaceOrderComfirm/>\r\n        ):(null)}\r\n        <FullScreenSection\r\n            justifyContent=\"center\"\r\n            alignItems=\"start\"\r\n            isDarkBackground\r\n            backgroundColor=\"#FFFFFF\"\r\n            minHeight=\"50vh\"\r\n            borderRadius=\"md\"\r\n            width={{ base: \"96vw\", md: \"96vw\" }}\r\n        >\r\n            {foodList.length > 0 ? (\r\n                <>\r\n                    <DeliveryAddress />\r\n                    <SimpleGrid columns={{ base: 1, md: 1 }} spacing={{ base: \"0.7rem\", md: \"2rem\" }}width=\"100%\">\r\n                        <HStack width=\"100%\" justifyContent=\"space-between\">\r\n                            <Heading size={{base: \"md\" , md: \"lg\" }} fontWeight=\"semibold\" color=\"#333333\">\r\n                                Total Items ({totalCount})\r\n                            </Heading>\r\n                            <Heading size={{base: \"md\" , md: \"lg\" }} fontWeight=\"semibold\" color=\"#333333\" textAlign=\"right\">\r\n                                Price\r\n                            </Heading>\r\n                        </HStack>\r\n                        {foodList.map(food => (\r\n                            <CartItems\r\n                                {...food}\r\n                                key={food.key}\r\n                                imageSrc={food.getImageSrc()}\r\n                                ingredients={food.ingredients}\r\n                            />\r\n                        ))}\r\n                    </SimpleGrid>\r\n                    <Divider orientation='horizontal' variant=\"solid\" borderColor=\"#495E57\" />\r\n                    <SimpleGrid columns={{ base: 1, md: 1 }} width=\"100%\">\r\n                        {/* Order Summary */}\r\n                        <VStack minWidth=\"41vw\" gap={{ base: \"0\" }}>\r\n                            <Heading size={{base: \"md\" , md: \"lg\" }} fontWeight=\"semibold\" color=\"#333333\"alignSelf=\"start\">Order Summary</Heading>\r\n                            <SimpleGrid columns={2} spacing={5} alignSelf=\"start\" py={5} width=\"100%\">\r\n                                <Text size=\"md\" color=\"#333333\">Total Price:</Text>\r\n                                <Text size=\"md\" color=\"#333333\" textAlign=\"right\">${totalPrice.toFixed(2)}</Text>\r\n                                <Text size=\"md\" color=\"#333333\">Delivery Charges:</Text>\r\n                                <Text size=\"md\" color=\"#333333\" textAlign=\"right\">${deliveryPrice(totalCount)}</Text>\r\n                            </SimpleGrid>\r\n                        </VStack>\r\n                        {/* Discount Section */}\r\n                        <VStack minWidth=\"41vw\" gap={{ base: \"0\" }}>\r\n                            <Heading size={{base: \"md\" , md: \"lg\" }} fontWeight=\"semibold\" color=\"#333333\"alignSelf=\"start\">Discount</Heading>\r\n                            <SimpleGrid columns={1} spacing={5} alignSelf=\"start\" py={5} width=\"100%\">\r\n                                <Text size=\"md\" color=\"#333333\"alignSelf=\"start\">Save @ 50% off With Dinner Deal 20</Text>\r\n                                <Text size=\"md\" color=\"#333333\"alignSelf=\"start\">View all restaurant coupons</Text>\r\n                            </SimpleGrid>\r\n                        </VStack>\r\n                        <Payment />\r\n                        {/* Order Total Section */}\r\n                        <VStack minWidth=\"41vw\" py={{ base: '0.5rem', md: 5 }} gap={{ base: \"0\" }}>\r\n                            <SimpleGrid columns={2} spacing={5} alignSelf=\"start\" width=\"100%\">\r\n                                <Heading size=\"md\" fontWeight=\"semibold\" color=\"#333333\" alignSelf=\"start\">Order Total:</Heading>\r\n                                <Heading size=\"md\" fontWeight=\"semibold\" color=\"#FC2063\" textAlign=\"right\">\r\n                                    ${(totalPrice + deliveryPrice(totalCount)).toFixed(2)}\r\n                                </Heading>\r\n                            </SimpleGrid>\r\n                        </VStack>\r\n                        {/* Place Order Button */}\r\n                        <VStack minWidth=\"41vw\" py={5}>\r\n                            <Button colorScheme=\"yellow\" width=\"100%\" onClick={toggleComfirmForm}>\r\n                                <span style={{ color: '#333333' }}>Place Order</span>\r\n                            </Button>\r\n                        </VStack>\r\n                    </SimpleGrid>\r\n                </>\r\n            ) : (\r\n                <VStack color=\"#333333\" alignSelf=\"center\">\r\n                    <Heading size={{base: \"lg\" , md: \"2xl\" }} fontWeight=\"semibold\" color=\"#495E57\">Empty Cart!</Heading>\r\n                    <Link to=\"/order-online\">\r\n                        <Heading size={{base: \"md\" , md: \"lg\" }} fontWeight=\"semibold\" color=\"#FC2063\" _hover={{ textDecoration: 'underline', cursor: 'pointer' }}>\r\n                            Click to Order\r\n                        </Heading>\r\n                    </Link>\r\n                </VStack>\r\n            )}\r\n        </FullScreenSection>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Cart;","import { SimpleGrid, Heading, VStack } from \"@chakra-ui/react\";\r\nimport React, { useEffect } from \"react\";\r\nimport FullScreenSection from \"./FullScreenSection\";\r\nimport Cart from \"./Cart\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faOpencart } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { useScreenSize } from \"../context/ScreenSizeContext\";\r\nimport Wave from 'react-wavify';\r\nconst CartPage = () => {\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    };\r\n    const { setPage } = useScreenSize();\r\n    useEffect(() => {\r\n        setPage('cart');\r\n        const scrollToTopTimeout = setTimeout(handleScrollToTop, 300);\r\n        return () => clearTimeout(scrollToTopTimeout); // Cleanup timeout on unmount\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <FullScreenSection\r\n                justifyContent=\"center\"\r\n                alignItems=\"start\"\r\n                isDarkBackground\r\n                backgroundColor=\"#495E57\"\r\n                minHeight={{ base: \"20vh\", md: \"25vh\" }}\r\n                width=\"100%\"\r\n                zIndex=\"100\"\r\n            >\r\n                <br/><br/>\r\n                <SimpleGrid columns={2} alignItems=\"center\" width=\"100%\">\r\n                    <VStack alignItems=\"start\" width=\"70vw\">\r\n                        <Heading size={{ base: \"md\", md: \"2xl\" }} fontWeight=\"semibold\" color=\"#F4CE14\">CART FOR DELIVERY!</Heading>\r\n                        <Heading size={{ base: \"md\", md: \"xl\" }} fontWeight=\"medium\" noOfLines={1} color=\"#EDEFEE\">Final Check!</Heading>\r\n                    </VStack>\r\n                    <VStack alignItems=\"flex-end\" width=\"100%\"><FontAwesomeIcon icon={faOpencart} size=\"5x\"/></VStack>\r\n                </SimpleGrid>\r\n            </FullScreenSection>\r\n            <Wave fill='#495e57'\r\n                paused={false}\r\n                style={{ display: 'flex', transform: 'scaleY(-1)', marginTop: '-100px' }}\r\n                options={{\r\n                height: 20,\r\n                amplitude: 20,\r\n                speed: 0.15,\r\n                points: 3\r\n                }}\r\n            />\r\n            <Cart />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CartPage;","import { HStack, Heading, VStack, SimpleGrid,  } from \"@chakra-ui/react\";\r\nimport React, { useEffect } from \"react\";\r\nimport FullScreenSection from \"./FullScreenSection\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBowlFood, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { useScreenSize } from \"../context/ScreenSizeContext\";\r\nimport Wave from 'react-wavify';\r\n\r\nconst LoginPage = ({ isSignUp }) => {\r\n    const { setPage } = useScreenSize();\r\n    const handleScrollToTop = () => {\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setPage('login');\r\n        const scrollToTopTimeout = setTimeout(handleScrollToTop, 300);\r\n        return () => clearTimeout(scrollToTopTimeout); // Cleanup timeout on unmount\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <FullScreenSection\r\n                justifyContent=\"center\"\r\n                alignItems=\"start\"\r\n                isDarkBackground\r\n                backgroundColor=\"#495E57\"\r\n                minHeight={{ base: \"20vh\", md: \"25vh\" }}\r\n                width=\"100%\"\r\n                zIndex=\"100\"\r\n            >\r\n                <br/><br/>\r\n                <SimpleGrid columns={2} alignItems=\"center\" width=\"100%\">\r\n                    <VStack alignItems=\"start\" width=\"70vw\">\r\n                        <Heading size={{ base: \"md\", md: \"2xl\" }} fontWeight=\"semibold\" noOfLines={1} color=\"#F4CE14\">{isSignUp ? \"SIGN-UP\" : \"SIGN-IN\"}</Heading>\r\n                    </VStack>\r\n                    <VStack alignItems=\"flex-end\" width=\"100%\"><FontAwesomeIcon icon={faBowlFood} size=\"5x\"/></VStack>\r\n                </SimpleGrid>\r\n            </FullScreenSection>\r\n            <Wave fill='#495e57'\r\n                paused={false}\r\n                style={{ display: 'flex', transform: 'scaleY(-1)', marginTop: '-100px' }}\r\n                options={{\r\n                height: 20,\r\n                amplitude: 20,\r\n                speed: 0.15,\r\n                points: 3\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n//<FontAwesomeIcon icon={faUser} />","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    HStack,\r\n    Heading,\r\n    Text,\r\n    VStack,\r\n    Button,\r\n    FormControl,\r\n    FormErrorMessage,\r\n    FormLabel,\r\n    Input,\r\n    Image,\r\n    Box\r\n} from \"@chakra-ui/react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport FullScreenSection from \"./FullScreenSection\";\r\nimport useSubmit from \"../hooks/useSubmit\";\r\nimport { useAlertContext } from \"../context/alertContext\";\r\nimport img1 from \"../images/small/Intro_Restaurantfood.jpg\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser, faEnvelope,faLock } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { socials } from \"../utils/data\";\r\nimport LoginPage from \"./LoginPage.js\";\r\nconst Login = () => {\r\n    const { isLoading, response, submit } = useSubmit();\r\n    const { onOpen } = useAlertContext();\r\n    const [isSignUp, setIsSignUp] = useState(false);\r\n\r\n    const formik = useFormik({\r\n        initialValues: { email: \"\", password: \"\", firstName: \"\" },\r\n        onSubmit: (values) => {\r\n            submit('https://john.com/contactme', values, isSignUp ? 'signup' : 'login');\r\n        },\r\n        validationSchema: Yup.object({\r\n            email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\r\n            password: Yup.string().required(\"Required\"),\r\n            firstName: isSignUp ? Yup.string().required(\"Required\") : undefined,\r\n        }),\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (response) {\r\n            onOpen(response.type, response.message);\r\n            if (response.type === 'success') {\r\n                formik.resetForm();\r\n            }\r\n        }\r\n    }, [response]);\r\n\r\n    const toggleForm = () => {\r\n        setIsSignUp((prev) => !prev);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <LoginPage isSignUp={isSignUp} />\r\n            <FullScreenSection\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            isDarkBackground\r\n            backgroundColor=\"#FFFFFF\"\r\n            py={{ base: 0, md: 10 }}\r\n            color=\"#333333\"\r\n            borderRadius=\"md\"\r\n        >\r\n            <br/>\r\n            <VStack gap=\"6\" alignItems=\"start\">\r\n                <VStack spacing={2}>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <VStack\r\n                            width={{ base: \"96vw\", md: \"35rem\" }}\r\n                            borderColor=\"#49SE57\"\r\n                            borderWidth=\"1px\"\r\n                            padding=\"2rem\"\r\n                            gap={{ base: \"1.4rem\", md: \"2rem\" }}\r\n                        >\r\n                            <Heading size={{ base: \"md\", md: \"xl\" }} fontWeight=\"semibold\" color=\"#333333\">\r\n                                {isSignUp ? \"SIGN-UP\" : \"SIGN-IN\"}\r\n                            </Heading>\r\n                            <Text size=\"md\" color=\"#333333\">\r\n                                {isSignUp ? \"Create a new account\" : \"Please enter your email and password!\"}\r\n                            </Text>\r\n\r\n                            {isSignUp && (\r\n                                <FormControl isInvalid={!!formik.errors.firstName && formik.touched.firstName}>\r\n                                    <HStack justify=\"space-between\" align=\"center\" width=\"95%\">\r\n                                        <FormLabel htmlFor=\"firstName\">First Name<span style={{ color: 'red' }}>*</span></FormLabel>\r\n                                        <FontAwesomeIcon icon={faUser} />\r\n                                    </HStack>\r\n                                    <Input\r\n                                        id=\"firstName\"\r\n                                        name=\"firstName\"\r\n                                        placeholder=\"First Name\"\r\n                                        {...formik.getFieldProps(\"firstName\")}\r\n                                    />\r\n                                    <FormErrorMessage>{formik.errors.firstName}</FormErrorMessage>\r\n                                </FormControl>\r\n                            )}\r\n\r\n                            <FormControl isInvalid={!!formik.errors.email && formik.touched.email}>\r\n                                <HStack justify=\"space-between\" align=\"center\" width=\"95%\">\r\n                                    <FormLabel htmlFor=\"email\">Email Address<span style={{ color: 'red' }}>*</span></FormLabel>\r\n                                    <FontAwesomeIcon icon={faEnvelope} />\r\n                                </HStack>\r\n                                <Input\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    {...formik.getFieldProps(\"email\")}\r\n                                />\r\n                                <FormErrorMessage>{formik.errors.email}</FormErrorMessage>\r\n                            </FormControl>\r\n\r\n                            <FormControl isInvalid={!!formik.errors.password && formik.touched.password}>\r\n                                <HStack justify=\"space-between\" align=\"center\" width=\"95%\">\r\n                                    <FormLabel htmlFor=\"password\">Password<span style={{ color: 'red' }}>*</span></FormLabel>\r\n                                    <FontAwesomeIcon icon={faLock} />\r\n                                </HStack>\r\n                                <Input\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    {...formik.getFieldProps(\"password\")}\r\n                                />\r\n                                <FormErrorMessage>{formik.errors.password}</FormErrorMessage>\r\n                            </FormControl>\r\n\r\n                            <Button type=\"submit\" size=\"md\" colorScheme=\"yellow\" width=\"full\" isLoading={isLoading}>\r\n                                <span style={{ color: '#333333' }}>{isSignUp ? \"Sign Up\" : \"Login\"}</span>\r\n                            </Button>\r\n\r\n                            <HStack spacing={5}>\r\n                                {socials.map(({ icon, url }) => (\r\n                                    <a key={url} href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        <Box\r\n                                            as=\"div\"\r\n                                            transition=\"all 0.2s linear\"\r\n                                            _hover={{ transform: \"translateY(-5px)\" }}>\r\n                                            <FontAwesomeIcon icon={icon} size=\"xl\" />\r\n                                        </Box>\r\n                                    </a>\r\n                                ))}\r\n                            </HStack>\r\n\r\n                            <Text size=\"md\" color=\"#333333\" onClick={toggleForm} cursor=\"pointer\">\r\n                                {isSignUp ? \"Have an account? Sign In\" : \"Don't have an account? Sign Up\"}\r\n                            </Text>\r\n                        </VStack>\r\n                    </form>\r\n                    <Image src={img1} width=\"full\" height=\"40vh\" borderRadius=\"md\" fit=\"cover\" />\r\n                </VStack>\r\n            </VStack>\r\n        </FullScreenSection>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from \"react\";\r\nimport Homepage from \"../components/Homepage\";\r\nimport OrderPage from \"../components/OrderPage\";\r\nimport OrderOnline from \"../components/OrderOnline\";\r\n//import Payment from \"./components/Payment\";\r\nimport ReservationPage from \"../components/ReservationPage\";\r\nimport CartPage from \"../components/CartPage\";\r\n//import SignIn from \"./components/SignIn\";\r\nimport {Routes, Route, } from 'react-router-dom';\r\nimport NotFound from \"../components/NotFound\";\r\nimport Login from \"../components/Login\";\r\nimport Loading from \"../components/Loading\";\r\nconst AppRoutes = () => {\r\n    return (\r\n        <>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Homepage />}></Route>\r\n                <Route path=\"/reservation\" element={<ReservationPage />}></Route>\r\n                <Route path=\"/order-online\" element={<OrderOnline />}></Route>\r\n                <Route path=\"/order-online/order/:dish\" element={<OrderPage />}></Route>\r\n                <Route path=\"/cart\" element={<CartPage />}></Route>\r\n                <Route path=\"/login\" element={<Login />}></Route>\r\n                <Route path=\"/loading\" element={<Loading/>}></Route>\r\n                <Route path=\"*\" element={<Homepage />}></Route>\r\n            </Routes>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppRoutes;","import {faInstagram, faGithub, faLinkedin, faTiktok, faWhatsapp} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nexport const socials = [\r\n    {\r\n        icon: faInstagram,\r\n        url: \"https://www.instagram.com/n.t.y_rc/profilecard/?igsh=aHVmbTA3a2dmZnl\",\r\n    },\r\n    {\r\n        icon: faWhatsapp,\r\n        url: \"\",\r\n    },\r\n    {\r\n        icon: faTiktok,\r\n        url: \"https://v.douyin.com/CeiJy3jyk/ 1@5.com :1pm\",\r\n    },\r\n    {\r\n        icon: faGithub,\r\n        url: \"https://github.com/Richard920-hkpolyu\",\r\n    },\r\n    {\r\n        icon: faLinkedin,\r\n        url: \"https\",\r\n    },\r\n];\r\n\r\n\r\nexport const fooditems = [\r\n    {\r\n        id: 1,\r\n        key: 1,\r\n        title: \"Greek Salad\",\r\n        category: \"main\",\r\n        type: \"salad\",\r\n        monthly: 200,\r\n        ingredients: [\r\n            { name: \"Olives\", price: \"$1.00\" },\r\n            { name: \"Feta Cheese\", price: \"$1.00\" },\r\n            { name: \"Red Onion\", price: \"$1.00\" }\r\n        ],\r\n        description:\r\n        \"A refreshing Greek salad featuring crisp lettuce, juicy tomatoes, and tangy feta cheese, lightly dressed to enhance its fresh flavors.\",\r\n        price: \"$39.99\",\r\n        getImageSrc: () => require(\"../images/small/GreekSalad.jpg\"),\r\n    },\r\n    {\r\n        id: 2,\r\n        key: 2,\r\n        title: \"Caesar Salad\",\r\n        category: \"main\",\r\n        type: \"salad\",\r\n        monthly: 210,\r\n        ingredients: [\r\n            { name: \"Anchovies\", price: \"$1.00\" },\r\n            { name: \"Parmesan Cheese\", price: \"$1.00\" },\r\n            { name: \"Croutons\", price: \"$1.00\" }\r\n        ],\r\n        description:\r\n        \"A classic Caesar salad with crisp romaine lettuce, creamy dressing, and a sprinkle of parmesan, perfect for a light meal.\",\r\n        price: \"$37.99\",\r\n        getImageSrc: () => require(\"../images/small/caesar.jpg\"),\r\n    },\r\n    {\r\n        id: 3,\r\n        key: 3,\r\n        title: \"Bruschetta\",\r\n        category: \"main\",\r\n        type: \"bread\",\r\n        monthly: 150,\r\n        ingredients: [\r\n            { name: \"Garlic\", price: \"$1.00\" },\r\n            { name: \"Basil\", price: \"$1.00\" },\r\n            { name: \"Mozzarella\", price: \"$1.00\" }\r\n        ],\r\n        description:\r\n        \"Crispy toasted bread topped with fresh tomatoes, garlic, and a hint of basil, offering a delightful bite that captures Italian flavors.\",\r\n        price: \"$37.99\",\r\n        getImageSrc: () => require(\"../images/small/Brushetta.jpg\"),\r\n    },\r\n    {\r\n        id: 4,\r\n        key: 4,\r\n        title: \"Sandwich\",\r\n        category: \"main\",\r\n        type: \"bread\",\r\n        monthly: 80,\r\n        ingredients: [\r\n            { name: \"Mayonnaise\", price: \"$1.00\" },\r\n            { name: \"Pickles\", price: \"$1.00\" },\r\n            { name: \"Mustard\", price: \"$1.00\" }\r\n        ],\r\n        description:\r\n        \"A hearty sandwich layered with fresh ingredients, perfect for a quick lunch or snack, offering a satisfying crunch with every bite.\",\r\n        price: \"$27.99\",\r\n        getImageSrc: () => require(\"../images/small/sandwich.jpg\"),\r\n    },\r\n    {\r\n        id: 5,\r\n        key: 5,\r\n        title: \"Pasta\",\r\n        category: \"main\",\r\n        type: \"pasta\",\r\n        monthly: 200,\r\n        ingredients: [\r\n            { name: \"Mushrooms\", price: \"$1.00\" },\r\n            { name: \"Olive Oil\", price: \"$1.00\" },\r\n            { name: \"Garlic\", price: \"$1.00\" }\r\n        ],\r\n        description:\r\n        \"Delicious pasta served with a rich and flavorful sauce, garnished to perfection for a comforting and hearty meal.\",\r\n        price: \"$38.99\",\r\n        getImageSrc: () => require(\"../images/small/Pasta.jpg\"),\r\n    },\r\n    {\r\n        id: 6,\r\n        key: 6,\r\n        title: \"Maggi\",\r\n        category: \"main\",\r\n        type: \"pasta\",\r\n        monthly: 90,\r\n        ingredients: [\r\n            { name: \"Artificial Flavoring\", price: \"$1.00\" },\r\n            { name: \"Preservatives\", price: \"$1.00\" },\r\n            { name: \"MSG\", price: \"$1.00\" }\r\n        ],\r\n        description:\r\n        \"Instant noodles that are quick to prepare, offering a burst of flavor for those craving a simple and satisfying meal.\",\r\n        price: \"$34.99\",\r\n        getImageSrc: () => require(\"../images/small/maggi.jpg\"),\r\n    },\r\n    {\r\n        id: 7,\r\n        key: 7,\r\n        title: \"Pizza\",\r\n        category: \"main\",\r\n        type: \"pizza\",\r\n        monthly: 140,\r\n        ingredients: [\r\n            { name: \"Pineapple\", price: \"$1.00\" },\r\n            { name: \"Olives\", price: \"$1.00\" },\r\n            { name: \"Anchovies\", price: \"$1.00\" }\r\n        ],\r\n        description:\r\n        \"A mouth-watering pizza topped with a rich tomato sauce, melted cheese, and your choice of toppings, baked to perfection.\",\r\n        price: \"$129.99\",\r\n        getImageSrc: () => require(\"../images/small/pizza.jpg\"),\r\n    },\r\n    {\r\n        id: 8,\r\n        key: 8,\r\n        title: \"Grilled Fish\",\r\n        category: \"a la carte\",\r\n        type: \"fish\",\r\n        monthly: 50,\r\n        ingredients: [\r\n            { name: \"Fish Skin\", price: \"$1.00\" },\r\n            { name: \"Lemon Zest\", price: \"$1.00\" },\r\n            { name: \"Herbs\", price: \"$1.00\" }\r\n        ],\r\n        description:\r\n        \"Succulent grilled fish seasoned with spices and herbs, served with a side that complements its natural flavors.\",\r\n        price: \"$70.00\",\r\n        getImageSrc: () => require(\"../images/small/GrilledFish.jpg\"),\r\n    },\r\n    {\r\n        id: 9,\r\n        key: 9,\r\n        title: \"Veggie\",\r\n        category: \"a la carte\",\r\n        type: \"veggie\",\r\n        monthly: 10,\r\n        ingredients: [\r\n            { name: \"Tofu\", price: \"$1.00\" },\r\n            { name: \"Bell Peppers\", price: \"$1.00\" },\r\n            { name: \"Zucchini\", price: \"$1.00\" }\r\n        ],\r\n        description:\r\n        \"A colorful veggie dish packed with fresh vegetables, lightly sautéed to retain their crunch and vibrant flavors.\",\r\n        price: \"$29.99\",\r\n        getImageSrc: () => require(\"../images/small/veggie.jpg\"),\r\n    },\r\n    {\r\n        id: 10,\r\n        key: 10,\r\n        title: \"Lemon Dessert\",\r\n        category: \"dessert\",\r\n        type: \"cake\",\r\n        monthly: 40,\r\n        ingredients: [\r\n            { name: \"Gelatin\", price: \"$1.00\" },\r\n            { name: \"Coconut\", price: \"$1.00\" },\r\n            { name: \"Marshmallows\", price: \"$1.00\" }\r\n        ],\r\n        description:\r\n        \"A light and zesty lemon dessert that offers a refreshing finish to any meal, perfect for citrus lovers.\",\r\n        price: \"$14.99\",\r\n        getImageSrc: () => require(\"../images/small/Lemon_Dessert.jpg\"),\r\n    },\r\n    {\r\n        id: 11,\r\n        key: 11,\r\n        title: \"Chocolate Shake\",\r\n        category: \"drink\",\r\n        type: \"shake\",\r\n        monthly: 10,\r\n        ingredients: [\r\n            { name: \"Chocolate Syrup\", price: \"$1.00\" },\r\n            { name: \"Whipped Cream\", price: \"$1.00\" },\r\n            { name: \"Chocolate Chips\", price: \"$1.00\" }\r\n        ],\r\n        description:\r\n        \"A rich and creamy chocolate shake, blended to perfection for a sweet and indulgent treat any time of the day.\",\r\n        price: \"$19.99\",\r\n        getImageSrc: () => require(\"../images/small/choclate shake.jpg\"),\r\n    },\r\n    {\r\n        id: 12,\r\n        key: 12,\r\n        title: \"Strawberry Shake\",\r\n        category: \"drink\",\r\n        type: \"shake\",\r\n        monthly: 10,\r\n        ingredients: [\r\n            { name: \"Red Food Coloring\", price: \"$1.00\" },\r\n            { name: \"Sugar\", price: \"$1.00\" },\r\n            { name: \"Milk Powder\", price: \"$1.00\" }\r\n        ],\r\n        description:\r\n        \"A delightful strawberry shake, bursting with fruity flavor and creamy texture, perfect for cooling down on a hot day.\",\r\n        price: \"$19.99\",\r\n        getImageSrc: () => require(\"../images/small/strawberry shake.jpg\"),\r\n    },\r\n    {\r\n        id: 13,\r\n        key: 13,\r\n        title: \"Coffee\",\r\n        category: \"drink\",\r\n        type: \"coffee\",\r\n        monthly: 10,\r\n        ingredients: [\r\n            { name: \"Instant Coffee\", price: \"$1.00\" },\r\n            { name: \"Sugar\", price: \"$1.00\" },\r\n            { name: \"Creamer\", price: \"$1.00\" }\r\n        ],\r\n        description:\r\n        \"A classic cup of coffee brewed to perfection, offering a warm and comforting experience to start your day.\",\r\n        price: \"$12.99\",\r\n        getImageSrc: () => require(\"../images/small/coffee.jpg\"),\r\n    },\r\n    {\r\n        id: 14,\r\n        key: 14,\r\n        title: \"Snow Meiniang\",\r\n        category: \"dessert\",\r\n        type: \"cake\",\r\n        monthly: 80,\r\n        ingredients: [\r\n            { name: \"Artificial Sweeteners\", price: \"$1.00\" },\r\n            { name: \"Food Coloring\", price: \"$1.00\" },\r\n            { name: \"Gelatin\", price: \"$1.00\" }\r\n        ],\r\n        description:\r\n        \"A unique dessert featuring a soft, fluffy texture, often enjoyed as a sweet treat to satisfy your cravings.\",\r\n        price: \"$24.99\",\r\n        getImageSrc: () => require(\"../images/small/dessert2.jpg\"),\r\n    },\r\n];"],"names":["_ref","children","isDarkBackground","boxProps","_objectWithoutProperties","_excluded","_jsx","VStack","backgroundColor","color","padding","_objectSpread","maxWidth","minHeight","Loading","progress","setProgress","useState","useEffect","interval","setInterval","prev","clearInterval","Math","min","_jsxs","Box","height","bgColor","display","alignItems","justifyContent","flexDirection","Image","src","logo","alt","boxSize","mb","CircularProgress","isIndeterminate","Introduction","alignment","useBreakpointValue","base","md","lg","_Fragment","FullScreenSection","borderRadius","HStack","spacing","width","py","Heading","size","fontWeight","noOfLines","alignSelf","Text","fontSize","align","Link","to","Button","colorScheme","style","ChevronRightIcon","img1","fit","zIndex","marginTop","transition","_hover","transform","bg","_active","maxHeight","Wave","fill","paused","options","amplitude","speed","points","id","title","category","type","monthly","ingredients","description","price","imageSrc","dataToPass","modifyItems","items","useScreenSize","foundCount","findCountById","item","find","count","undefined","navigate","useNavigate","handleNavigate","concat","replace","state","setCount","handleIncrement","borderWidth","onClick","cursor","lineHeight","Flex","justify","gap","handleDecrement","FontAwesomeIcon","icon","faMinus","faPlus","loading","MenuSection","foodList","setFoodList","fooditems","bool","setBool","overflowX","whiteSpace","scrollbarWidth","ButtonGroup","map","variant","filterdList","sort","a","b","filter","handleFilter","SimpleGrid","columns","food","Card","getImageSrc","Homepage","handleScrollToTop","window","scrollTo","top","behavior","setPage","scrollToTopTimeout","setTimeout","clearTimeout","Order","isMobile","useMediaQuery","location","useLocation","addIngredients","setAddIngredients","totalPrice","setTotalPrice","length","every","ingredient","some","addIngredient","name","ingredientsFromItems","findIngredientsById","ingredientsPrice","reduce","total","parseFloat","toFixed","prevCount","max","buttonEvent","renderImage","paddingTop","sm","objectFit","renderDescription","renderIngredients","index","DeleteIcon","handleDelete","ingredientName","prevIngredients","ArrowBackIcon","w","h","MinusIcon","AddIcon","px","OrderPage","faMotorcycle","OrderOnline","useSubmit","isLoading","setLoading","response","setResponse","submit","async","url","data","formType","message","ms","Promise","resolve","firstName","guests","time","date","error","getCurrentDate","today","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","Reservation","onOpen","useAlertContext","click","setClick","person","setPerson","formik","useFormik","initialValues","email","onSubmit","values","validationSchema","Yup","required","resetForm","handleSubmit","borderColor","FormControl","isInvalid","touched","errors","FormLabel","htmlFor","Input","getFieldProps","FormErrorMessage","faChair","RadioGroup","defaultValue","value","onChange","setFieldValue","Radio","toggleEvent","isDisabled","faUser","placeholder","faEnvelope","backEvent","ReservationPage","faBowlFood","ingredientsNames","join","initialCount","ml","console","log","textAlign","DeliveryAddress","borderStyle","boxShadow","faLocationDot","faPhone","ChevronDownIcon","Payment","setValue","e","faAlipay","Spacer","faWeixin","faCcApplePay","CustomToastDescription","success","fontStyle","Cart","totalCount","setTotalCount","confirm","setConfirm","setItems","fireConfetti","toast","useToast","cartFilter","deliveryPrice","combinedData","key","calculateTotalPrice","calculateTotalCount","handleOrderSubmit","orderDetails","status","duration","isClosable","_unused","toggleComfirmForm","PlaceOrderComfirm","position","left","right","bottom","shadow","letterSpacing","_createElement","CartItems","Divider","orientation","minWidth","textDecoration","CartPage","faOpencart","isSignUp","Login","setIsSignUp","password","LoginPage","faLock","socials","href","target","rel","as","toggleForm","AppRoutes","Routes","Route","path","element","faInstagram","faWhatsapp","faTiktok","faGithub","faLinkedin","require"],"sourceRoot":""}